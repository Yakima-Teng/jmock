{"version":3,"file":"jmock.js","sources":["../src/utils/index.ts","../src/modules/random/basic.ts","../src/modules/random/index.ts","../src/main.ts"],"sourcesContent":["export const isDefined = (val: any): boolean => {\n  return typeof val !== 'undefined'\n}\n","import { isDefined } from '../../utils'\n\n/**\n * randomly return true or false\n * @param {number} [probability] the probability to return true, must be a value between 0 and 1 (including 0 and 1)\n *\n * @example\n * ```javascript\n * Mock.Random.boolean(0.9) // true\n * ```\n */\nconst bool = (probability?: number): boolean => {\n  if (!isDefined(probability)) {\n    return Math.random() > 0.5\n  }\n\n  return Math.random() > (1 - probability)\n}\n\n/**\n * randomly return an integer\n * @param {number} [min]\n * @param {number} [max]\n */\nconst int = (min?: number, max?: number): number => {\n  min = isDefined(min) ? parseInt('' + min, 10) : -9007199254740992 // -2^53\n  max = isDefined(max) ? parseInt('' + max, 10) : 9007199254740992 // 2^53\n  return  Math.round(Math.random() * (max - min)) + min\n}\n\n/**\n * randomly return a natural number (0, and positive integer)\n * @param {number} [min]\n * @param {number} [max]\n *\n * @example\n * ```javascript\n * Mock.Random.natural(10, 20) // 10\n * ```\n */\nconst natural = (min?: number, max?: number): number => {\n  min = isDefined(min) ? parseInt('' + min, 10) : 0\n  return int(min, max)\n}\n\n/**\n * randomly return a character\n * @param {string} clue 'lower', 'upper', 'number', 'symbol', 'alpha', or other given string\n */\nconst char = (clue: string): string => {\n  const lower = 'abcdefghijklmnopqrstuvwxyz'\n  const upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  const number = '0123456789'\n  const symbol = '!@#$%^&*()[]-+`~;\\'\\\\\":,./<>?|}{'\n  const alpha = lower + upper\n\n  const together = [alpha, number, symbol].join('')\n  const pools = { lower, upper, number, symbol, alpha }\n\n  const pool = !isDefined(clue) ? together : (pools[clue.toLowerCase()] || clue)\n  return pool.charAt(natural(0, pool.length - 1))\n}\n\n/**\n * randomly return a float number\n * @param min\n * @param max\n * @param minDecimalLength\n * @param maxDecimalLength\n */\nconst float = (min?: number, max?: number, minDecimalLength?: number, maxDecimalLength?: number): number => {\n  minDecimalLength = isDefined(minDecimalLength) ? minDecimalLength : 0\n  maxDecimalLength = isDefined(maxDecimalLength) ? maxDecimalLength : 17\n\n  // ensure length of decimal part is between [0, 17]\n  minDecimalLength = Math.max(Math.min(minDecimalLength, 17), 0)\n  maxDecimalLength = Math.max(Math.min(maxDecimalLength, 17), 0)\n  const decimalLength = natural(minDecimalLength, maxDecimalLength)\n\n  let returnNum = int(min, max) + '.'\n\n  for (let i = 0; i < decimalLength; i++) {\n    // the last dicimal number should not be zero, for it will be ignore by JS engine\n    returnNum += (i < decimalLength - 1) ? char('number') : char('123456789')\n  }\n\n  return parseFloat(returnNum)\n}\n\nexport default {\n  bool,\n  boolean: bool,\n  int,\n  integer: int,\n  natural,\n  char,\n  character: char,\n  float,\n}\n","import Basic from './basic'\n\nexport default {\n  ...Basic\n}\n","import Random from './modules/random'\n\nexport class Mock {\n  static Random = Random\n}\n"],"names":[],"mappings":"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"}